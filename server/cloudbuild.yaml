steps:
  - id: "Build express-app test docker image"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/nodejs-app", "."]

  - id: "Run unit test"
    name: "gcr.io/cloud-builders/docker"
    args: [
      'run', 'gcr.io/$PROJECT_ID/nodejs-app',
      'npm', 'test'
    ]

  - id: "Build express-app production docker image"
    name: "gcr.io/cloud-builders/docker"
    args: [
      "build",
      "-t", "gcr.io/$PROJECT_ID/nodejs-app",
      "-t", "gcr.io/$PROJECT_ID/nodejs-app:$SHORT_SHA",
      "."
    ]

  - id: "Build nginx-react docker"
    name: "gcr.io/cloud-builders/docker"
    args: [
      "build", "-f", "frontend/Dockerfile",
      "-t", "gcr.io/$PROJECT_ID/nginx-react",
      "-t", "gcr.io/$PROJECT_ID/nginx-react:$SHORT_SHA",
      "frontend"
    ]

  - id: "Deploy kubernetes"
    name: "gcr.io/cloud-builders/kubectl"
    args:
    - set
    - image
    - deployment
    - nodejs-nginx
    - nodejs-app=gcr.io/$PROJECT_ID/nodejs-app:$SHORT_SHA
    - nginx-react=gcr.io/$PROJECT_ID/nginx-react:$SHORT_SHA
    env:
      - "CLOUDSDK_COMPUTE_ZONE=us-central1-a"
      - "CLOUDSDK_CONTAINER_CLUSTER=nodejs-cluster"

images:
  - gcr.io/$PROJECT_ID/nodejs-app:$SHORT_SHA
  - gcr.io/$PROJECT_ID/nodejs-app
  - gcr.io/$PROJECT_ID/nginx-react:$SHORT_SHA
  - gcr.io/$PROJECT_ID/nginx-react

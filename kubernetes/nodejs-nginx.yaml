kind: Service
apiVersion: v1
metadata:
  name: nodejs-nginx
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nodejs-nginx
status:
  loadBalancer: {}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: nodejs-nginx
  name: nodejs-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejs-nginx
  template:
    metadata:
      labels:
        app: nodejs-nginx
    spec:
      containers:
        - name: nginx-react
          image: gcr.io/partifyapp-nodejs/nginx-react:latest
        - name: nodejs-app
          image: gcr.io/partifyapp-nodejs/nodejs-app:latest
          envFrom:
            - configMapRef:
                name: nodejs-app-config
            - secretRef:
                name: nodejs-app-secrets
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command:
            [
              "/cloud_sql_proxy",
              "-instances=partifyapp-nodejs:us-central1:nodejs-app-database=tcp:3306",
              "-credential_file=/secrets/cloudsql/credentials.json",
            ]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
